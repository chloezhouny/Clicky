{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","onClick","shuffleFriend","matchFriend","id","Wrapper","children","Title","App","state","friends","count","highScore","matchedFriends","message","tempCards","_this","i","length","j","Math","floor","random","_ref","setState","checkhighScore","console","log","tempCount","tempHighScore","concat","Object","toConsumableArray","includes","setTimeout","this","bind","assertThisInitialized","_this2","components_Wrapper","components_Title","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4dfe9fe.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => {props.shuffleFriend(); props.matchFriend(props.id)}} className=\"remove\">\n        âœ“\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n\n  state = {\n    friends,\n    count: 0,\n    highScore: 0,\n    matchedFriends: [],\n    message: \"Click to play!\"\n  };\n\n  shuffleFriend = () => {\n    var tempCards = this.state.friends;\n\n    for (let i = tempCards.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [tempCards[i], tempCards[j]] = [tempCards[j], tempCards[i]];\n    }\n    this.setState({ friends: tempCards });\n  };\n\n\n  checkhighScore = () =>\n  {\n    console.log(\"In check function\");\n    var tempCount = this.state.count;\n    var tempHighScore = this.state.highScore;\n\n    console.log(tempCount);\n    console.log(tempHighScore);\n\n    if (tempCount > tempHighScore)\n    {\n       console.log(tempCount);\n\n      this.setState({ highScore : this.state.highScore + 1});\n\n    }\n  }\n\n\n  matchFriend = (id) => {\n\n     console.log(this.state.count);\n\n\n    var matchedFriends = this.state.matchedFriends;\n\n    if (matchedFriends[0] === null)\n    {\n\n       this.checkhighScore();\n      matchedFriends = [...matchedFriends, id];\n     \n\n\n      this.setState({ matchedFriends : matchedFriends});\n      this.setState({ count : this.state.count + 1});\n   \n\n    }\n    else\n    {\n      if (matchedFriends.includes(id))\n      {\n        this.setState({ count : 0 });\n        this.setState({ matchedFriends: []});\n\n        this.setState({message: \"Game over. Start again.\"})\n        setTimeout(function() {this.setState({message: \"Click to Play\"});}.bind(this),3000);\n      }\n      else\n      {\n        this.setState({ count : this.state.count + 1});\n        // this.checkhighScore();\n\n\n        if (this.state.count < 3)\n        {\n          matchedFriends = [...matchedFriends, id];\n          this.setState({ matchedFriends : matchedFriends});\n          \n        }     \n        else if (this.state.count === 3)\n        {          \n          this.setState({ matchedFriends: []});  \n\n          this.setState({count: 0});\n          this.setState({message: \"You win!\"});\n          setTimeout(function() {this.setState({message: \"Click to Play\"});}.bind(this),3000);    \n        }\n      }\n    }\n\n  };\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <div> Count: {this.state.count} </div>\n        <div> Total Count: 3 </div>\n        <div> High Score: {this.state.highScore} </div>\n        <div> {this.state.message} </div>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleFriend={this.shuffleFriend}\n            matchFriend={this.matchFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}